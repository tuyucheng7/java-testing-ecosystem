<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <groupId>cn.tuyucheng.taketoday.java-testing-ecosystem</groupId>
   <artifactId>java-testing-ecosystem</artifactId>
   <packaging>pom</packaging>
   <version>1.0.0</version>
   <name>java-testing-ecosystem</name>

   <properties>
      <java.version>17</java.version>

      <skip.unit.tests>false</skip.unit.tests>
      <skip.integration.tests>true</skip.integration.tests>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
      <gib.referenceBranch>refs/remotes/origin/master</gib.referenceBranch>
      <gib.skipTestsForUpstreamModules>true</gib.skipTestsForUpstreamModules>
      <gib.buildUpstream>false</gib.buildUpstream>
      <gib.failOnMissingGitDir>false</gib.failOnMissingGitDir>
      <gib.failOnError>false</gib.failOnError>
      <gib.disable>true</gib.disable>

      <!-- 仅用于依赖关系管理以强制此版本，不包括为直接依赖关系 -->
      <junit.version>4.13.2</junit.version>
      <assertj.version>3.21.0</assertj.version>
      <hamcrest.version>2.2</hamcrest.version>
      <hamcrest-all.version>1.3</hamcrest-all.version>
      <mockito.version>4.4.0</mockito.version>
      <byte-buddy.version>1.12.13</byte-buddy.version>

      <!-- logging -->
      <org.slf4j.version>1.7.32</org.slf4j.version>
      <logback.version>1.2.7</logback.version>

      <!-- plugins -->
      <maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
      <maven-surefire-plugin.version>3.0.0-M7</maven-surefire-plugin.version>
      <maven-failsafe-plugin.version>2.22.0</maven-failsafe-plugin.version>
      <maven-war-plugin.version>3.3.2</maven-war-plugin.version>
      <maven-jar-plugin.version>3.2.2</maven-jar-plugin.version>
      <maven-jxr-plugin.version>3.0.0</maven-jxr-plugin.version>
      <build-helper-maven-plugin.version>3.1.0</build-helper-maven-plugin.version>
      <jacoco-maven-plugin.version>0.8.8</jacoco-maven-plugin.version>
      <sonar-maven-plugin.version>3.8.0.2131</sonar-maven-plugin.version>
      <exec-maven-plugin.version>3.0.0</exec-maven-plugin.version>

      <!-- apache commons libraries -->
      <commons-collections4.version>4.4</commons-collections4.version>
      <commons-io.version>2.11.0</commons-io.version>
      <commons-lang3.version>3.12.0</commons-lang3.version>

      <!-- popular libraries -->
      <log4j.version>1.2.17</log4j.version>
      <jmh-core.version>1.35</jmh-core.version>
      <jmh-generator.version>1.35</jmh-generator.version>
      <lombok.version>1.18.24</lombok.version>
      <h2.version>2.1.214</h2.version>
      <guava.version>31.1-jre</guava.version>
      <jackson.version>2.13.4</jackson.version>
      <junit-platform.version>1.9.2</junit-platform.version>
      <junit-jupiter.version>5.9.2</junit-jupiter.version>
      <junit-platform-surefire-provider.version>1.3.2</junit-platform-surefire-provider.version>

      <!-- code analysis -->
      <gitflow-incremental-builder.version>3.12.2</gitflow-incremental-builder.version>
      <jacoco.version>0.8.8</jacoco.version>

      <!-- sonarcloud -->
      <sonar.host.url>https://sonarcloud.io</sonar.host.url>
      <sonar.organization>tuyucheng</sonar.organization>
      <sonar.projectKey>tu-yucheng_java-testing-ecosystem</sonar.projectKey>
      <sonar.moduleKey>${project.artifactId}</sonar.moduleKey>
      <sonar.projectName>java-testing-ecosystem</sonar.projectName>
      <sonar.coverage.jacoco.xmlReportPaths>
         ${project.basedir}/jacoco-aggregate-report/target/site/jacoco-aggregate/jacoco.xml
      </sonar.coverage.jacoco.xmlReportPaths>
   </properties>

   <dependencies>
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>slf4j-api</artifactId>
         <version>${org.slf4j.version}</version>
      </dependency>
      <dependency>
         <groupId>ch.qos.logback</groupId>
         <artifactId>logback-classic</artifactId>
         <version>${logback.version}</version>
      </dependency>
      <dependency>
         <groupId>ch.qos.logback</groupId>
         <artifactId>logback-core</artifactId>
         <version>${logback.version}</version>
      </dependency>
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>jcl-over-slf4j</artifactId>
         <version>${org.slf4j.version}</version>
      </dependency>
      <dependency>
         <groupId>org.junit.jupiter</groupId>
         <artifactId>junit-jupiter-engine</artifactId>
         <version>${junit-jupiter.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.junit.jupiter</groupId>
         <artifactId>junit-jupiter-params</artifactId>
         <version>${junit-jupiter.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.junit.jupiter</groupId>
         <artifactId>junit-jupiter-api</artifactId>
         <version>${junit-jupiter.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.junit.vintage</groupId>
         <artifactId>junit-vintage-engine</artifactId>
         <version>${junit-jupiter.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.assertj</groupId>
         <artifactId>assertj-core</artifactId>
         <version>${assertj.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.hamcrest</groupId>
         <artifactId>hamcrest</artifactId>
         <version>${hamcrest.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.hamcrest</groupId>
         <artifactId>hamcrest-all</artifactId>
         <version>${hamcrest-all.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.mockito</groupId>
         <artifactId>mockito-core</artifactId>
         <version>${mockito.version}</version>
         <scope>test</scope>
      </dependency>
      <dependency>
         <groupId>org.apache.maven.surefire</groupId>
         <artifactId>surefire-logger-api</artifactId>
         <version>${maven-surefire-plugin.version}</version>
         <scope>test</scope>
         <optional>true</optional>
      </dependency>
   </dependencies>

   <build>
      <plugins>
         <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>${exec-maven-plugin.version}</version>
            <configuration>
               <executable>maven</executable>
            </configuration>
         </plugin>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>${maven-compiler-plugin.version}</version>
            <configuration>
               <source>${java.version}</source>
               <target>${java.version}</target>
            </configuration>
         </plugin>
         <!-- 默认情况下，单元测试"mvn clean install"(可选：-P unit)跳过集成测试 -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven-surefire-plugin.version}</version>
            <configuration>
               <forkCount>3</forkCount>
               <reuseForks>true</reuseForks>
               <skipTests>${skip.unit.tests}</skipTests>
               <excludes>
                  <exclude>**/*IntegrationTest</exclude>
                  <exclude>**/*IntTest</exclude>
                  <exclude>**/*LongRunningUnitTest</exclude>
                  <exclude>**/*ManualTest</exclude>
                  <exclude>**/JdbcTest</exclude>
                  <exclude>**/*LiveTest</exclude>
               </excludes>
            </configuration>
            <dependencies>
               <dependency>
                  <groupId>org.junit.jupiter</groupId>
                  <artifactId>junit-jupiter-engine</artifactId>
                  <version>${junit-jupiter.version}</version>
               </dependency>
               <dependency>
                  <groupId>org.junit.vintage</groupId>
                  <artifactId>junit-vintage-engine</artifactId>
                  <version>${junit-jupiter.version}</version>
               </dependency>
            </dependencies>
         </plugin>
         <!-- 通过"mvn clean install -P integration"进行集成测试 -->
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${maven-failsafe-plugin.version}</version>
            <executions>
               <execution>
                  <id>integration-tests</id>
                  <goals>
                     <goal>integration-test</goal>
                     <goal>verify</goal>
                  </goals>
                  <configuration>
                     <skipTests>${skip.integration.tests}</skipTests>
                     <excludes>
                        <exclude>**/*ManualTest</exclude>
                        <exclude>**/*LiveTest</exclude>
                     </excludes>
                     <includes>
                        <include>**/*IntegrationTest</include>
                        <include>**/*IntTest</include>
                     </includes>
                     <reuseForks>true</reuseForks>
                     <classesDirectory>${project.build.outputDirectory}</classesDirectory>
                  </configuration>
               </execution>
            </executions>
            <dependencies>
               <dependency>
                  <groupId>org.junit.jupiter</groupId>
                  <artifactId>junit-jupiter-engine</artifactId>
                  <version>${junit-jupiter.version}</version>
               </dependency>
               <dependency>
                  <groupId>org.junit.vintage</groupId>
                  <artifactId>junit-vintage-engine</artifactId>
                  <version>${junit-jupiter.version}</version>
               </dependency>
            </dependencies>
         </plugin>
         <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>${jacoco-maven-plugin.version}</version>
            <configuration>
               <excludes combine.children="append">
                  <exclude>cn/tuyucheng/taketoday/pmd/*</exclude>
                  <exclude>cn/tuyucheng/taketoday/**/*App.*</exclude>
                  <exclude>cn/tuyucheng/taketoday/**/*Application.*</exclude>
                  <exclude>cn/tuyucheng/taketoday/**/*Main.*</exclude>
                  <exclude>cn/tuyucheng/taketoday/**/*Config.*</exclude>
                  <exclude>cn/tuyucheng/taketoday/**/*Dto.*</exclude>
                  <exclude>cn/tuyucheng/taketoday/**/*DTO.*</exclude>
                  <exclude>cn/tuyucheng/taketoday/**/*Exception.*</exclude>
                  <exclude>cn/tuyucheng/taketoday/**/*Configuration.*</exclude>
                  <exclude>**/config/**/*</exclude>
                  <exclude>**/model/**/*</exclude>
                  <exclude>**/models/**/*</exclude>
                  <exclude>**/entity/**/*</exclude>
                  <exclude>**/entities/**/*</exclude>
                  <exclude>**/pojo/**/*</exclude>
                  <exclude>**/dto/**/*</exclude>
                  <exclude>**/vo/**/*</exclude>
                  <exclude>**/bo/**/*</exclude>
                  <exclude>**/domain/**/*</exclude>
                  <exclude>**/exception/**/*</exclude>
                  <exclude>cn/tuyucheng/taketoday/**/*Benchmark*.*</exclude>
                  <exclude>cn/tuyucheng/taketoday/**/*jmh_generated/*</exclude>
               </excludes>
            </configuration>
            <executions>
               <execution>
                  <id>prepare-agent</id>
                  <goals>
                     <goal>prepare-agent</goal>
                  </goals>
               </execution>
               <execution>
                  <id>report</id>
                  <phase>verify</phase>
                  <goals>
                     <goal>report</goal>
                  </goals>
               </execution>
            </executions>
         </plugin>
         <plugin>
            <groupId>org.sonarsource.scanner.maven</groupId>
            <artifactId>sonar-maven-plugin</artifactId>
            <version>${sonar-maven-plugin.version}</version>
         </plugin>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <version>${maven-war-plugin.version}</version>
            <configuration>
               <failOnMissingWebXml>false</failOnMissingWebXml>
            </configuration>
         </plugin>
      </plugins>

      <extensions>
         <extension>
            <groupId>com.vackosar.gitflowincrementalbuilder</groupId>
            <artifactId>gitflow-incremental-builder</artifactId>
            <version>${gitflow-incremental-builder.version}</version>
         </extension>
      </extensions>
   </build>

   <profiles>
      <!-- 仅执行单元测试的Profile(*Unit) -->
      <profile>
         <id>unit</id>
         <activation>
            <activeByDefault>true</activeByDefault>
         </activation>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <version>${maven-surefire-plugin.version}</version>
                  <configuration>
                     <forkCount>3</forkCount>
                     <reuseForks>true</reuseForks>
                     <includes>
                        <include>SpringContextTest</include>
                        <include>**/*UnitTest</include>
                     </includes>
                     <excludes>
                        <exclude>**/*IntegrationTest</exclude>
                        <exclude>**/*IntTest</exclude>
                        <exclude>**/*LongRunningUnitTest</exclude>
                        <exclude>**/*ManualTest</exclude>
                        <exclude>**/JdbcTest</exclude>
                        <exclude>**/*LiveTest</exclude>
                     </excludes>
                  </configuration>
               </plugin>
            </plugins>
         </build>

         <modules>
            <module>parent-java</module>
            <module>parent-spring-5</module>
            <module>parent-boot-2</module>
            <module>jacoco-aggregate-report</module>

            <module>allure-junit-5</module>
            <module>assertion-libraries</module>
            <module>cobertura</module>
            <module>cucumber-1</module>
            <module>cucumber-2</module>
            <module>cucumber-spring</module>
            <module>easy-random</module>
            <module>easymock</module>
            <module>gatling</module>
            <module>gatling-java</module>
            <module>greenmail</module>
            <module>groovy-spock</module>
            <module>hamcrest</module>
            <module>instancio</module>
            <module>jmeter</module>
            <module>jmh</module>
            <module>json-path</module>
            <module>junit-4</module>
            <module>junit-5</module>
            <module>junit-5-advanced</module>
            <module>junit-5-annotations</module>
            <module>junit-5-basics</module>
            <module>junit-5-migration</module>
            <module>junit-5-pioneer</module>
            <module>load-testing-comparison</module>
            <module>microshed</module>
            <module>mockito-1</module>
            <module>mockito-2</module>
            <module>mockito-simple</module>
            <module>mockito-spring</module>
            <module>mockserver</module>
            <!-- <module>pact</module> -->
            <module>parallel-tests-junit</module>
            <module>performance-tests</module>
            <module>powermock</module>
            <module>rest-assured</module>
            <module>rest-testing</module>
            <module>selenium-junit-testng</module>
            <module>selenium-webdriver</module>
            <module>serenity</module>
            <module>spring-rest-testing</module>
            <module>spring-testing-1</module>
            <module>spring-testing-2</module>
            <module>tdd</module>
            <module>test-containers</module>
            <module>testing-assertions</module>
            <module>testing-libraries-1</module>
            <module>testing-libraries-2</module>
            <module>testing-techniques</module>
            <module>testing-miscellaneous</module>
            <module>testng</module>
            <module>testng-command-line</module>
            <module>xmlunit-2</module>
            <module>zerocode</module>
         </modules>
      </profile>

      <!-- 仅执行集成测试的Profile(*Integration) -->
      <profile>
         <id>integration</id>
         <properties>
            <skip.integration.tests>false</skip.integration.tests>
            <skip.unit.tests>true</skip.unit.tests>
         </properties>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <excludes>
                        <exclude>**/*ManualTest</exclude>
                        <exclude>**/*LiveTest</exclude>
                     </excludes>
                     <includes>
                        <include>**/*IntegrationTest</include>
                        <include>**/*IntTest</include>
                     </includes>
                  </configuration>
               </plugin>
            </plugins>
         </build>

         <modules>
            <module>parent-java</module>
            <module>parent-spring-5</module>
            <module>parent-boot-2</module>
            <module>jacoco-aggregate-report</module>

            <module>allure-junit-5</module>
            <module>assertion-libraries</module>
            <module>cobertura</module>
            <module>cucumber-1</module>
            <module>cucumber-2</module>
            <module>cucumber-spring</module>
            <module>easy-random</module>
            <module>easymock</module>
            <module>gatling</module>
            <module>gatling-java</module>
            <module>greenmail</module>
            <module>groovy-spock</module>
            <module>hamcrest</module>
            <module>instancio</module>
            <module>jmeter</module>
            <module>jmh</module>
            <module>json-path</module>
            <module>junit-4</module>
            <module>junit-5</module>
            <module>junit-5-advanced</module>
            <module>junit-5-annotations</module>
            <module>junit-5-basics</module>
            <module>junit-5-migration</module>
            <module>junit-5-pioneer</module>
            <module>load-testing-comparison</module>
            <module>microshed</module>
            <module>mockito-1</module>
            <module>mockito-2</module>
            <module>mockito-simple</module>
            <module>mockito-spring</module>
            <module>mockserver</module>
            <!-- <module>pact</module> -->
            <module>parallel-tests-junit</module>
            <module>performance-tests</module>
            <module>powermock</module>
            <module>rest-assured</module>
            <module>rest-testing</module>
            <module>selenium-junit-testng</module>
            <module>selenium-webdriver</module>
            <module>serenity</module>
            <module>spring-rest-testing</module>
            <module>spring-testing-1</module>
            <module>spring-testing-2</module>
            <module>tdd</module>
            <module>test-containers</module>
            <module>testing-assertions</module>
            <module>testing-libraries-1</module>
            <module>testing-libraries-2</module>
            <module>testing-techniques</module>
            <module>testing-miscellaneous</module>
            <module>testng</module>
            <module>testng-command-line</module>
            <module>xmlunit-2</module>
            <module>zerocode</module>
         </modules>
      </profile>

      <!-- 同时执行单元测试和集成测试的Profile(*Unit、*Integration) -->
      <profile>
         <id>all</id>
         <properties>
            <skip.integration.tests>false</skip.integration.tests>
            <skip.unit.tests>false</skip.unit.tests>
         </properties>

         <modules>
            <module>parent-java</module>
            <module>parent-spring-5</module>
            <module>parent-boot-2</module>
            <module>jacoco-aggregate-report</module>

            <module>allure-junit-5</module>
            <module>assertion-libraries</module>
            <module>cobertura</module>
            <module>cucumber-1</module>
            <module>cucumber-2</module>
            <module>cucumber-spring</module>
            <module>easy-random</module>
            <module>easymock</module>
            <module>gatling</module>
            <module>gatling-java</module>
            <module>greenmail</module>
            <module>groovy-spock</module>
            <module>hamcrest</module>
            <module>instancio</module>
            <module>jmeter</module>
            <module>jmh</module>
            <module>json-path</module>
            <module>junit-4</module>
            <module>junit-5</module>
            <module>junit-5-advanced</module>
            <module>junit-5-annotations</module>
            <module>junit-5-basics</module>
            <module>junit-5-migration</module>
            <module>junit-5-pioneer</module>
            <module>load-testing-comparison</module>
            <module>microshed</module>
            <module>mockito-1</module>
            <module>mockito-2</module>
            <module>mockito-simple</module>
            <module>mockito-spring</module>
            <module>mockserver</module>
            <!-- <module>pact</module> -->
            <module>parallel-tests-junit</module>
            <module>performance-tests</module>
            <module>powermock</module>
            <module>rest-assured</module>
            <module>rest-testing</module>
            <module>selenium-junit-testng</module>
            <module>selenium-webdriver</module>
            <module>serenity</module>
            <module>spring-rest-testing</module>
            <module>spring-testing-1</module>
            <module>spring-testing-2</module>
            <module>tdd</module>
            <module>test-containers</module>
            <module>testing-assertions</module>
            <module>testing-libraries-1</module>
            <module>testing-libraries-2</module>
            <module>testing-techniques</module>
            <module>testing-miscellaneous</module>
            <module>testng</module>
            <module>testng-command-line</module>
            <module>xmlunit-2</module>
            <module>zerocode</module>
         </modules>
      </profile>

      <!-- 仅执行实时测试的Profile(*LiveTest) -->
      <profile>
         <id>live</id>
         <build>
            <plugins>
               <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-surefire-plugin</artifactId>
                  <configuration>
                     <excludes>
                        <exclude>**/SpringContextTest.java</exclude>
                        <exclude>**/*UnitTest.java</exclude>
                        <exclude>**/*IntegrationTest.java</exclude>
                        <exclude>**/*IntTest.java</exclude>
                        <exclude>**/*LongRunningUnitTest.java</exclude>
                        <exclude>**/*ManualTest.java</exclude>
                        <exclude>**/*JdbcTest.java</exclude>
                     </excludes>
                     <includes>
                        <include>**/*LiveTest.java</include>
                     </includes>
                  </configuration>
               </plugin>
            </plugins>
         </build>
      </profile>

      <!-- 构建父模块的Profile -->
      <profile>
         <id>parents</id>
         <modules>
            <module>parent-java</module>
            <module>parent-spring-5</module>
            <module>parent-boot-2</module>
         </modules>
      </profile>
   </profiles>

   <reporting>
      <plugins>
         <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jxr-plugin</artifactId>
            <version>${maven-jxr-plugin.version}</version>
         </plugin>
      </plugins>
   </reporting>
</project>